#include "lists.h"

/**
 * insert_dnodeint_at_index - inserts a new node at a given position
 *
 * @h: pointer to the pointer to the head of the list
 * @idx: the index where the new node should be added
 * @n: the value to be stored in the new node
 *
 * Return: the address of the new node, or NULL if it failed
 */
dlistint_t *insert_dnodeint_at_index(dlistint_t **h, unsigned int idx, int n)
{
    dlistint_t *new_node = malloc(sizeof(dlistint_t));
    dlistint_t *current = *h;
    unsigned int i = 0;

    if (!new_node)
        return (NULL);

    new_node->n = n;

    if (idx == 0)
    {
        new_node->next = *h;
        new_node->prev = NULL;
        if (*h)
            (*h)->prev = new_node;
        *h = new_node;
        return (new_node);
    }

    while (current && i < idx - 1)
    {
        current = current->next;
        i++;
    }

    if (!current)
    {
        free(new_node);
        return (NULL);
    }

    new_node->next = current->next;
    new_node->prev = current;
    if (current->next)
        current->next->prev = new_node;
    current->next = new_node;

    return (new_node);
}
